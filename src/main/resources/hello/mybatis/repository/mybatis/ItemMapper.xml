<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.mybatis.repository.mybatis.ItemMapper">

    <!-- id의 경우 DB가 직접 생성하도 하였기 때문에 useGeneratedKeys , keyProperty 속성을 사용해준다.-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into Item(item_name, price, quantity)
        values (#{itemName}, #{price}, #{quantity});
    </insert>

    <update id="update">
        update Item
        set item_name = #{updateParam.itemName},
            price     = #{updateParam.price},
            quantity  = #{updateParam.quantity}
        where id = #{id}
    </update>

    <!-- resultType = "hello.mybatis.domain"이다 . applicationproperties에 보면
         mybatis.type-aliases-package = hello.mybatis.domain으로 지정해주었기 때문에 아래의 resultType에 Item이라 적을 수 있다.
         또한 , 예전 JDBCTEMPLATE을 이용하여 findById를 로직을 짰을 때 template.update(sql , itemMapper()) itemMapper로
         바꾸고 싶은 객체로 바꾸는 작업을 한 적이 있다. 이러한 작업을 mybatis는 아래와 같이 resultType 속성 하나만으로 알아서 해준다.
     -->
    <select id="findById" resultType="Item">
        select id, item_name, price, quantity
        from item
        where id = #{id}
    </select>


    <!-- 아래의 finAll도 resultType을 지정해준다. 하지만 findAll의 가장 핵심적인 로직은 동적쿼리를 어떻게 작성할 것인가이다.-->
    <select id="findAll" resultType="Item">
        select id, item_name, price, quantity
        from item
        -- 왜 select문 자체에 where을 지정해주지 않고 아래와 같이 where 태그를 달아 두었냐면
        -- 쿼리문에 직접 where문을 달아 놓으면 조건에 만족하는 ResultSet을 반환한다.
        -- 하지만 내가 원하는 쿼리문은 사용자가 사용하면서 생길 수 있는 여러 상황에 맞게 쿼리문을 짜고 싶어서 where태그를 사용하여 동적인
        -- 쿼리문을 작성하였다.

        -- where 태그 동작 방법
        -- where tag에 감싸져 있는 if문이 하나라도 적용되지 않는다면 쿼리문에 where를 넣어 주지 않는다.
        -- 만약 조건에 충족하는 if태그가 하나라도 있다고 하면 and에 작성해둔 조건이 쿼리에 들어간다.

        <where>
            -- 아이템 검색 조건으로 빈 공백 null값이 들어오지 않는 경우
            -- 그리고
            -- item_name에 itemSearchCond.itemName이 처음 , 끝 , 중간에 itemName에 들어간 경우
            <if test="itemName != null and itemName != ''">
                and item_name like concat('%' ,#{itemName}, '%')
            </if>

            <if test="maxPrice != null">
                and price &lt;= #{maxPrice}
            </if>
        </where>
    </select>


</mapper>